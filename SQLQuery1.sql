DROP DATABASE IF EXISTS PROYECTO_VOTACIONES;
CREATE DATABASE PROYECTO_VOTACIONES;
USE PROYECTO_VOTACIONES;

DROP TABLE IF EXISTS A헲;
CREATE TABLE A헲(
	ID INT PRIMARY KEY IDENTITY(1,1),
	A헲_CARRERA VARCHAR(10)  NOT NULL
);

DROP TABLE IF EXISTS CARRERA;
CREATE TABLE CARRERA(
	ID INT PRIMARY KEY IDENTITY(1,1),
	NOMBRE VARCHAR(60) NOT NULL
);

DROP TABLE IF EXISTS ESTUDIANTE;
CREATE TABLE ESTUDIANTE(
	CODIGO VARCHAR(20) PRIMARY KEY,
	ID_A헲 INT REFERENCES A헲(ID),
	ID_CARRERA INT REFERENCES CARRERA(ID),
	CONTRASE헤 VARCHAR(40) NOT NULL
);

DROP TABLE IF EXISTS CATEGORIA;
CREATE TABLE CATEGORIA(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	NOMBRE VARCHAR(100) NOT NULL
);

DROP TABLE IF EXISTS TIPOCONCURSO;
CREATE TABLE TIPOCONCURSO(
	ID INT PRIMARY KEY IDENTITY(1,1),
	NOMBRE VARCHAR(100) NOT NULL
);

DROP TABLE IF EXISTS CATEGORIACONCURSO;
CREATE TABLE CATEGORIACONCURSO(
	ID_TIPOCONCURSO INT NOT NULL,
	ID_CATEGORIA INT NOT NULL,
);


DROP TABLE IF EXISTS CONCURSO;
CREATE TABLE CONCURSO(
	ID INT PRIMARY KEY IDENTITY(1,1),
	NOMBRE VARCHAR(100) NOT NULL,
	DESCRIPCION VARCHAR(255) NOT NULL,
	ESTADO BIT NOT NULL,
	ID_TIPOCONCURSO INT REFERENCES TIPOCONCURSO(ID)
);

DROP TABLE IF EXISTS PARTICIPANTE;
CREATE TABLE PARTICIPANTE(
	ID INT PRIMARY KEY IDENTITY(1,1)NOT NULL,
	NOMBRE VARCHAR(100)NOT NULL,
	APELLIDO VARCHAR(100) NOT NULL,
	CODIGO VARCHAR(100) NOT NULL,
	ID_CONCURSO INT REFERENCES CONCURSO(ID)
);
	

DROP TABLE IF EXISTS VOTO;
CREATE TABLE VOTO(
	ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	ID_ESTUDIANTE VARCHAR(20) REFERENCES ESTUDIANTE(CODIGO),
	ID_PARTICIPANTE INT REFERENCES PARTICIPANTE(ID)
);

CREATE TABLE ADMINISTRADOR(
	ID INT PRIMARY KEY IDENTITY(1,1),
	USUARIO VARCHAR(30) NOT NULL,
	CONTRASE헤 VARCHAR(40) NOT NULL
);

INSERT INTO ADMINISTRADOR (USUARIO, CONTRASE헤)
			VALUES ('Admin' , '1234567890');


/*Stored procedures*/
DROP PROCEDURE IF EXISTS sp_UpdateYear;
CREATE PROCEDURE sp_UpdateYear
(
	@id INT,
	@careerYear VARCHAR(10)
)
AS
BEGIN
	UPDATE A헲 SET
		A헲_CARRERA = ISNULL(@careerYear, A헲_CARRERA)
	WHERE ID = @id
END;


DROP PROCEDURE IF EXISTS sp_UpdateCareer;
CREATE PROCEDURE sp_UpdateCareer
(
	@id INT,
	@name VARCHAR(60)
)
AS
BEGIN
	UPDATE CARRERA SET 
		NOMBRE = ISNULL(@name, NOMBRE)
	WHERE ID = @id
END;


DROP PROCEDURE IF EXISTS sp_UpdateStudent;
CREATE PROCEDURE sp_UpdateStudent
(
	@studentCode VARCHAR(20),
	@yearId INT ,
	@careerId INT,
	@password VARCHAR(40)  
)
AS
BEGIN
	UPDATE ESTUDIANTE SET
		ID_A헲 = ISNULL(@yearId, ID_A헲),
		ID_CARRERA = ISNULL(@careerId, ID_CARRERA),
		CONTRASE헤 = ISNULL(@password, CONTRASE헤)
	WHERE CODIGO = @studentCode
END;


DROP PROCEDURE IF EXISTS sp_UpdateContest;
CREATE PROCEDURE sp_UpdateContest
(
  @id INT,
  @name VARCHAR(100),
  @description VARCHAR(255),
  @state BIT
)
AS
BEGIN
  UPDATE CONCURSO 
     SET NOMBRE = ISNULL(@name, NOMBRE),
         DESCRIPCION = ISNULL(@description, DESCRIPCION),
         ESTADO = ISNULL(@state, ESTADO)
     WHERE ID = @id
END;


CREATE PROCEDURE sp_UpdateCategory
(
	@id INT,
	@name VARCHAR(100)
)
AS
BEGIN
	UPDATE CATEGORIA 
		SET NOMBRE = ISNULL(@name, NOMBRE)
	WHERE ID = @id
END;


SELECT s.*, y.A헲_CARRERA, c.NOMBRE 
	FROM ESTUDIANTE s
	JOIN A헲 y ON s.ID_A헲 = y.ID
	JOIN CARRERA c ON s.ID_CARRERA = c.ID;

SELECT s.*, y.A헲_CARRERA, c.NOMBRE
    FROM ESTUDIANTE s 
    JOIN A헲 y ON s.ID_A헲 = y.ID
    JOIN CARRERA c ON s.ID_CARRERA = c.ID
    WHERE s.CODIGO = 'SL0054';


SELECT con.*, cat.NOMBRE
	FROM CONCURSO con
	JOIN CATEGORIA cat ON con.ID_CATEGORIA = cat.ID;

SELECT con.*, cat.NOMBRE
	FROM CONCURSO con
	JOIN CATEGORIA cat ON con.ID_CATEGORIA = cat.ID
	WHERE con.ID = 1;

